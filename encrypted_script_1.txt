--[[
    Omega's Ultimate Panel v3.0 (UI Overhaul Edition)
    - NOUVEAU : Refonte complète du design du panneau.
    - NOUVEAU : Animations fluides sur tous les éléments interactifs.
    - NOUVEAU : Icônes pour chaque fonctionnalité.
    - Intro cinématique conservée.
    - Toutes les fonctionnalités précédentes sont intactes.
]]

-- // Ne pas lancer si le GUI existe déjà
if game:GetService("CoreGui"):FindFirstChild("OmegaGUI_Container") and game:GetService("CoreGui"):FindFirstChild("OmegaIntro") then
    print("Le Panel d'Omega est déjà en place, arrête de spammer ! 🤣")
    return
end

local CoreGui = game:GetService("CoreGui")
local TweenService = game:GetService("TweenService")

-- // =================================================================================
-- // SECTION 0: ANIMATION DE DÉMARRAGE CINÉMATIQUE (INCHANGÉE)
-- // =================================================================================
task.spawn(function()
    local IntroGui = Instance.new("ScreenGui", CoreGui)
    IntroGui.Name = "OmegaIntro"
    IntroGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    IntroGui.ResetOnSpawn = false
    local Background = Instance.new("Frame", IntroGui)
    Background.Size = UDim2.new(1, 0, 1, 0)
    Background.BackgroundColor3 = Color3.new(0, 0, 0)
    local letters = {"Ω", "M", "E", "G", "A"}
    local letterLabels = {}
    local startY = 0.45
    local totalWidth = 0.8
    local spacing = totalWidth / #letters
    for i, letter in ipairs(letters) do local label = Instance.new("TextLabel", Background); label.Size = UDim2.new(spacing, 0, 0.2, 0); label.Position = UDim2.new(0.1 + (i - 1) * spacing, 0, startY, 0); label.BackgroundTransparency = 1; label.Font = Enum.Font.SourceSansBold; label.TextColor3 = Color3.fromRGB(255, 0, 0); label.Text = letter; label.TextSize = 140; label.TextTransparency = 1; table.insert(letterLabels, label) end
    local Subtitle = Instance.new("TextLabel", Background)
    Subtitle.Size = UDim2.new(1, 0, 0.1, 0); Subtitle.Position = UDim2.new(0, 0, 0.8, 0); Subtitle.BackgroundTransparency = 1; Subtitle.Font = Enum.Font.SourceSansItalic; Subtitle.TextColor3 = Color3.fromRGB(200, 200, 200); Subtitle.Text = "Une création signée..."; Subtitle.TextSize = 24; Subtitle.TextTransparency = 1
    local BackgroundMusic = Instance.new("Sound", IntroGui); BackgroundMusic.SoundId = "rbxassetid://356083533"; BackgroundMusic.Volume = 0.4; BackgroundMusic.Looped = true
    local HeartbeatSound = Instance.new("Sound", IntroGui); HeartbeatSound.SoundId = "rbxassetid://132192244"; HeartbeatSound.Volume = 0.8; HeartbeatSound.Looped = true
    local GlitchSound = Instance.new("Sound", IntroGui); GlitchSound.SoundId = "rbxassetid://184223978"
    local FinalImpactSound = Instance.new("Sound", IntroGui); FinalImpactSound.SoundId = "rbxassetid://140933553"
    BackgroundMusic:Play(); HeartbeatSound:Play()
    for i, label in ipairs(letterLabels) do TweenService:Create(label, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {TextTransparency = 0, Position = UDim2.new(label.Position.X.Scale, 0, startY - 0.05, 0)}):Play(); task.wait(0.5) end
    local pulseInfo = TweenInfo.new(0.5, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, 0, true); for _, label in ipairs(letterLabels) do TweenService:Create(label, pulseInfo, {TextColor3 = Color3.fromRGB(255, 100, 100)}):Play() end; task.wait(2)
    TweenService:Create(Subtitle, TweenInfo.new(0.5), {TextTransparency = 0}):Play(); task.wait(0.5)
    HeartbeatSound:Stop(); GlitchSound:Play(); for _, label in ipairs(letterLabels) do label.Text = "" end; letterLabels[3].Text = "Ω M E G A"; letterLabels[3].TextColor3 = Color3.fromRGB(255, 255, 255); TweenService:Create(letterLabels[3], TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, 3, true), {Position = UDim2.new(letterLabels[3].Position.X.Scale, math.random(-5, 5), letterLabels[3].Position.Y.Scale, math.random(-5, 5))}):Play(); task.wait(0.4); FinalImpactSound:Play(); Subtitle.Text = "OMEGA"; Subtitle.TextColor3 = Color3.fromRGB(255, 0, 0); task.wait(0.6)
    TweenService:Create(Background, TweenInfo.new(1), {BackgroundTransparency = 1}):Play(); TweenService:Create(BackgroundMusic, TweenInfo.new(1), {Volume = 0}):Play(); task.wait(1)
    IntroGui:Destroy()
end)
task.wait(7)

-- // =================================================================================
-- // SECTION 1: NOUVELLE INTERFACE GRAPHIQUE ANIMÉE
-- // =================================================================================

local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "OmegaGUI_Container"
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.ResetOnSpawn = false

-- // --- Bouton d'ouverture ---
local OpenButton = Instance.new("ImageButton")
OpenButton.Name = "OpenButton"
OpenButton.Size = UDim2.new(0, 60, 0, 60)
OpenButton.Position = UDim2.new(0, 20, 0.5, -30)
OpenButton.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
OpenButton.BackgroundTransparency = 0.2
OpenButton.Image = "rbxassetid://6031423445" -- Symbole Omega stylé
OpenButton.ImageColor3 = Color3.fromRGB(255, 0, 0)
OpenButton.ScaleType = Enum.ScaleType.Fit
OpenButton.Parent = ScreenGui
local OpenButtonCorner = Instance.new("UICorner", OpenButton)
OpenButtonCorner.CornerRadius = UDim.new(1, 0) -- Rond
local OpenButtonStroke = Instance.new("UIStroke", OpenButton)
OpenButtonStroke.Color = Color3.fromRGB(255, 0, 0)
OpenButtonStroke.Thickness = 1.5

-- // --- Panneau Principal ---
local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Size = UDim2.new(0, 300, 0, 350)
MainFrame.Position = UDim2.new(0.5, -150, 0.5, -175)
MainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
MainFrame.BorderSizePixel = 0
MainFrame.Visible = false -- Commence caché
MainFrame.ClipsDescendants = true
MainFrame.Parent = ScreenGui
local MainFrameCorner = Instance.new("UICorner", MainFrame)
MainFrameCorner.CornerRadius = UDim.new(0, 12)
local MainFrameStroke = Instance.new("UIStroke", MainFrame)
MainFrameStroke.Color = Color3.fromRGB(255, 0, 0)
MainFrameStroke.Thickness = 2
MainFrameStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

-- // --- Titre du Panneau ---
local TitleLabel = Instance.new("TextLabel", MainFrame)
TitleLabel.Size = UDim2.new(1, 0, 0, 50)
TitleLabel.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
TitleLabel.Font = Enum.Font.SourceSansBold
TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TitleLabel.Text = "Ω   O M E G A   P A N E L"
TitleLabel.TextSize = 24

-- // --- Conteneur pour les boutons ---
local ButtonContainer = Instance.new("ScrollingFrame", MainFrame)
ButtonContainer.Size = UDim2.new(1, 0, 1, -50)
ButtonContainer.Position = UDim2.new(0, 0, 0, 50)
ButtonContainer.BackgroundTransparency = 1
ButtonContainer.BorderSizePixel = 0
ButtonContainer.ScrollBarImageColor3 = Color3.fromRGB(255, 0, 0)
ButtonContainer.ScrollBarThickness = 5
local UIListLayout = Instance.new("UIListLayout", ButtonContainer)
UIListLayout.Padding = UDim.new(0, 10)
UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

-- // --- Fonction pour créer les boutons stylés ---
local function createFeatureButton(text, iconId, order)
    local Button = Instance.new("TextButton")
    Button.Name = text:gsub(" ", "") .. "Button"
    Button.Size = UDim2.new(0.9, 0, 0, 45)
    Button.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    Button.Font = Enum.Font.SourceSansSemibold
    Button.TextColor3 = Color3.fromRGB(220, 220, 220)
    Button.Text = text .. " [OFF]"
    Button.TextSize = 18
    Button.LayoutOrder = order
    Button.Parent = ButtonContainer
    
    local Corner = Instance.new("UICorner", Button)
    Corner.CornerRadius = UDim.new(0, 8)
    local Stroke = Instance.new("UIStroke", Button)
    Stroke.Color = Color3.fromRGB(80, 80, 80)
    Stroke.Thickness = 1
    
    local Icon = Instance.new("ImageLabel", Button)
    Icon.Size = UDim2.new(0, 30, 0, 30)
    Icon.Position = UDim2.new(0, 10, 0.5, -15)
    Icon.BackgroundTransparency = 1
    Icon.Image = "rbxassetid://" .. iconId
    
    -- Animations
    Button.MouseEnter:Connect(function()
        TweenService:Create(Button, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(60, 60, 60)}):Play()
        TweenService:Create(Stroke, TweenInfo.new(0.2), {Color = Color3.fromRGB(255, 0, 0)}):Play()
    end)
    Button.MouseLeave:Connect(function()
        TweenService:Create(Button, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(45, 45, 45)}):Play()
        TweenService:Create(Stroke, TweenInfo.new(0.2), {Color = Color3.fromRGB(80, 80, 80)}):Play()
    end)
    
    return Button
end

local EspToggleButton = createFeatureButton("ESP", "6031432691", 1)
local FarmToggleButton = createFeatureButton("Auto Farm", "6031431093", 2)
local SpeedToggleButton = createFeatureButton("Vitesse", "6031433742", 3)

-- // =================================================================================
-- // SECTION 2: LOGIQUE DES SCRIPTS
-- // =================================================================================

local Players, RunService, UserInputService = game:GetService("Players"), game:GetService("RunService"), game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer

-- // --- Logique d'ouverture/fermeture du panneau ---
local panelOpen = false
OpenButton.MouseButton1Click:Connect(function()
    panelOpen = not panelOpen
    MainFrame.Visible = true
    local startPos = panelOpen and UDim2.new(0, -300, 0.5, -175) or UDim2.new(0.5, -150, 0.5, -175)
    local endPos = panelOpen and UDim2.new(0.5, -150, 0.5, -175) or UDim2.new(0, 300, 0.5, -175)
    MainFrame.Position = startPos
    MainFrame:TweenPosition(endPos, Enum.EasingDirection.Out, Enum.EasingStyle.Quint, 0.5, true)
end)

-- // --- Logique de drag ---
local dragging, dragStart, startPos = false, nil, nil
TitleLabel.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then dragging, dragStart, startPos = true, input.Position, MainFrame.Position end end)
UserInputService.InputEnded:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then dragging = false end end)
TitleLabel.InputChanged:Connect(function(input) if (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) and dragging then local delta = input.Position - dragStart; MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y) end end)

-- // --- Logique des fonctionnalités ---
local function toggleFeature(button, featureName, enabled)
    button.Text = featureName .. " [" .. (enabled and "ON" or "OFF") .. "]"
    local color = enabled and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(220, 220, 220)
    TweenService:Create(button, TweenInfo.new(0.3), {TextColor = color}):Play()
end

-- ESP
local ESP_ENABLED = false; local ESPContainer = Instance.new("Folder", ScreenGui); ESPContainer.Name = "ESP_Container"; local BADGE_NAME = "Staff"; EspToggleButton.MouseButton1Click:Connect(function() ESP_ENABLED = not ESP_ENABLED; toggleFeature(EspToggleButton, "ESP", ESP_ENABLED); if not ESP_ENABLED then ESPContainer:ClearAllChildren() end end); local function CreateOrUpdateESP(player) if not player or not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then return end; local espName = "ESP_" .. player.Name; local esp = ESPContainer:FindFirstChild(espName); if not esp then esp = Instance.new("BillboardGui", ESPContainer); esp.Name = espName; esp.AlwaysOnTop = true; esp.Size = UDim2.new(0, 200, 0, 50); esp.Adornee = player.Character.HumanoidRootPart; local textLabel = Instance.new("TextLabel", esp); textLabel.Name = "NameLabel"; textLabel.BackgroundTransparency = 1; textLabel.Size = UDim2.new(1, 0, 1, 0); textLabel.Font = Enum.Font.SourceSansBold; textLabel.FontSize = Enum.FontSize.Size18; textLabel.TextColor3 = Color3.fromRGB(255, 0, 0); textLabel.Text = player.Name .. " [VIP OU PREMIUIM]"; textLabel.TextStrokeTransparency = 0 end; esp.Enabled = (player.Character.Humanoid.Health > 0) end; RunService.RenderStepped:Connect(function() if not ESP_ENABLED then return end; local staffUsernames = {}; local playerGui = LocalPlayer:FindFirstChild("PlayerGui"); if not playerGui then return end; local bannerGui = playerGui:FindFirstChild("BannersGui"); if not bannerGui then return end; for _, banner in pairs(bannerGui:GetChildren()) do if banner:FindFirstChild(BADGE_NAME, true) then local username = banner.Name:gsub("_Banner", ""); if not table.find(staffUsernames, username) then table.insert(staffUsernames, username) end end end; for _, esp in pairs(ESPContainer:GetChildren()) do local playerName = esp.Name:gsub("ESP_", ""); if not table.find(staffUsernames, playerName) then esp:Destroy() end end; for _, username in pairs(staffUsernames) do local player = Players:FindFirstChild(username); if player and player ~= LocalPlayer then CreateOrUpdateESP(player) end end end)

-- Auto Farm
local FARM_ENABLED = false; local farmThread = nil; FarmToggleButton.MouseButton1Click:Connect(function() FARM_ENABLED = not FARM_ENABLED; toggleFeature(FarmToggleButton, "Auto Farm", FARM_ENABLED); if FARM_ENABLED and not farmThread then print("Omega Auto Farm: ACTIVÉ."); farmThread = task.spawn(function() while FARM_ENABLED do local TachesFolder = workspace:FindFirstChild("Taches"); if TachesFolder then for _, obj in ipairs(TachesFolder:GetDescendants()) do if obj:IsA("ProximityPrompt") and obj.Enabled then fireproximityprompt(obj) end end end; task.wait(2) end; print("Omega Auto Farm: DÉSACTIVÉ."); farmThread = nil end) end end)

-- Vitesse
local SPEED_ENABLED = false; local originalSpeed = 16; if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then originalSpeed = LocalPlayer.Character.Humanoid.WalkSpeed end; LocalPlayer.CharacterAdded:Connect(function(character) originalSpeed = character:WaitForChild("Humanoid").WalkSpeed; task.wait(0.1); if SPEED_ENABLED and character:FindFirstChild("Humanoid") then character.Humanoid.WalkSpeed = 34 end end); SpeedToggleButton.MouseButton1Click:Connect(function() SPEED_ENABLED = not SPEED_ENABLED; toggleFeature(SpeedToggleButton, "Vitesse", SPEED_ENABLED); if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then if SPEED_ENABLED then LocalPlayer.Character.Humanoid.WalkSpeed = 34 else LocalPlayer.Character.Humanoid.WalkSpeed = originalSpeed end end end)

ScreenGui.Parent = CoreGui
print("Le Panel Ultime d'Omega v3.0 (UI Overhaul Edition) est chargé ! 🎨")


