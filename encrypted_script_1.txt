--[[
    Omega's Ultimate Panel v2.4 (Symphony of Destruction Edition)
    - NOUVEAU : Musique de fond épique ajoutée à l'intro
    - Animation de démarrage de 7 secondes, qualité cinéma
    - GUI Déplaçable (PC/Mobile)
    - ESP (cherche "Staff", affiche "VIP OU PREMIUIM")
    - Auto Farm Concierge avec cooldown
    - Speed Hack (34 WalkSpeed) avec interrupteur
]]

-- // Ne pas lancer si le GUI existe déjà
if game:GetService("CoreGui"):FindFirstChild("OmegaGUI_Container") and game:GetService("CoreGui"):FindFirstChild("OmegaIntro") then
    print("Le Panel d'Omega est déjà en place, arrête de spammer ! 🤣")
    return
end

-- // =================================================================================
-- // SECTION 0: ANIMATION DE DÉMARRAGE CINÉMATIQUE
-- // =================================================================================

local TweenService = game:GetService("TweenService")
local CoreGui = game:GetService("CoreGui")

local IntroGui = Instance.new("ScreenGui")
IntroGui.Name = "OmegaIntro"
IntroGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
IntroGui.ResetOnSpawn = false
IntroGui.Parent = CoreGui

local Background = Instance.new("Frame", IntroGui)
Background.Size = UDim2.new(1, 0, 1, 0)
Background.BackgroundColor3 = Color3.new(0, 0, 0)
Background.BorderSizePixel = 0

-- // Création des lettres individuelles pour OMEGA
local letters = {"Ω", "M", "E", "G", "A"}
local letterLabels = {}
local startY = 0.45
local totalWidth = 0.8
local spacing = totalWidth / #letters

for i, letter in ipairs(letters) do
    local label = Instance.new("TextLabel", Background)
    label.Size = UDim2.new(spacing, 0, 0.2, 0)
    label.Position = UDim2.new(0.1 + (i - 1) * spacing, 0, startY, 0)
    label.BackgroundTransparency = 1
    label.Font = Enum.Font.SourceSansBold
    label.TextColor3 = Color3.fromRGB(255, 0, 0)
    label.Text = letter
    label.TextSize = 140
    label.TextTransparency = 1
    table.insert(letterLabels, label)
end

local Subtitle = Instance.new("TextLabel", Background)
Subtitle.Size = UDim2.new(1, 0, 0.1, 0)
Subtitle.Position = UDim2.new(0, 0, 0.8, 0)
Subtitle.BackgroundTransparency = 1
Subtitle.Font = Enum.Font.SourceSansItalic
Subtitle.TextColor3 = Color3.fromRGB(200, 200, 200)
Subtitle.Text = "Une création signée..."
Subtitle.TextSize = 24
Subtitle.TextTransparency = 1

-- // Sons pour l'ambiance (AVEC MUSIQUE DE FOND)
local BackgroundMusic = Instance.new("Sound", IntroGui)
BackgroundMusic.SoundId = "rbxassetid://356083533" -- Musique de tension/épique
BackgroundMusic.Volume = 0.4 -- Un peu moins fort pour laisser la place aux effets
BackgroundMusic.Looped = true

local HeartbeatSound = Instance.new("Sound", IntroGui)
HeartbeatSound.SoundId = "rbxassetid://132192244"
HeartbeatSound.Volume = 0.8
HeartbeatSound.Looped = true

local GlitchSound = Instance.new("Sound", IntroGui)
GlitchSound.SoundId = "rbxassetid://184223978"

local FinalImpactSound = Instance.new("Sound", IntroGui)
FinalImpactSound.SoundId = "rbxassetid://140933553"

-- // Séquence d'animation de 7 secondes
task.spawn(function()
    BackgroundMusic:Play()
    HeartbeatSound:Play()
    
    -- 1. Apparition des lettres une par une (2.5s)
    for i, label in ipairs(letterLabels) do
        TweenService:Create(label, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {TextTransparency = 0, Position = UDim2.new(label.Position.X.Scale, 0, startY - 0.05, 0)}):Play()
        task.wait(0.5)
    end

    -- 2. Le texte pulse avec le coeur (2s)
    local pulseInfo = TweenInfo.new(0.5, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, 0, true)
    for _, label in ipairs(letterLabels) do
        TweenService:Create(label, pulseInfo, {TextColor3 = Color3.fromRGB(255, 100, 100)}):Play()
    end
    task.wait(2)

    -- 3. Le sous-titre apparaît (0.5s)
    TweenService:Create(Subtitle, TweenInfo.new(0.5), {TextTransparency = 0}):Play()
    task.wait(0.5)

    -- 4. Final : Glitch, impact, et le nom complet apparaît (1s)
    HeartbeatSound:Stop()
    GlitchSound:Play()
    for _, label in ipairs(letterLabels) do
        label.Text = ""
    end
    letterLabels[3].Text = "Ω M E G A"
    letterLabels[3].TextColor3 = Color3.fromRGB(255, 255, 255)
    TweenService:Create(letterLabels[3], TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, 3, true), {Position = UDim2.new(letterLabels[3].Position.X.Scale, math.random(-5, 5), letterLabels[3].Position.Y.Scale, math.random(-5, 5))}):Play()
    task.wait(0.4)
    FinalImpactSound:Play()
    Subtitle.Text = "OMEGA"
    Subtitle.TextColor3 = Color3.fromRGB(255, 0, 0)
    task.wait(0.6)

    -- 5. Disparition (1s)
    TweenService:Create(Background, TweenInfo.new(1), {BackgroundTransparency = 1}):Play()
    TweenService:Create(BackgroundMusic, TweenInfo.new(1), {Volume = 0}):Play() -- On baisse le son en fondu
    task.wait(1)

    -- 6. Destruction
    IntroGui:Destroy()
end)

-- On attend la fin de l'intro (7 secondes)
task.wait(7)

-- // =================================================================================
-- // SECTION 1: CRÉATION DE L'INTERFACE GRAPHIQUE (GUI)
-- // (Le reste du code est identique)
-- // =================================================================================

local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "OmegaGUI_Container"
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.ResetOnSpawn = false

local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Size = UDim2.new(0, 280, 0, 260)
MainFrame.Position = UDim2.new(0.5, -140, 0.5, -130)
MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
MainFrame.BorderColor3 = Color3.fromRGB(255, 0, 0)
MainFrame.BorderSizePixel = 2
MainFrame.Active = true
MainFrame.Draggable = true
MainFrame.Parent = ScreenGui

local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 8)
UICorner.Parent = MainFrame

local TitleBar = Instance.new("Frame")
TitleBar.Name = "TitleBar"
TitleBar.Size = UDim2.new(1, 0, 0, 30)
TitleBar.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
TitleBar.BorderSizePixel = 0
TitleBar.Parent = MainFrame

local UICornerTitle = UICorner:Clone()
UICornerTitle.Parent = TitleBar

local TitleLabel = Instance.new("TextLabel")
TitleLabel.Name = "TitleLabel"
TitleLabel.Size = UDim2.new(1, -30, 1, 0)
TitleLabel.BackgroundTransparency = 1
TitleLabel.Font = Enum.Font.SourceSansBold
TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TitleLabel.Text = "Omega's Panel"
TitleLabel.TextSize = 18
TitleLabel.Parent = TitleBar

local CloseButton = Instance.new("TextButton")
CloseButton.Name = "CloseButton"
CloseButton.Size = UDim2.new(0, 30, 1, 0)
CloseButton.Position = UDim2.new(1, -30, 0, 0)
CloseButton.BackgroundColor3 = TitleBar.BackgroundColor3
CloseButton.BackgroundTransparency = 0.5
CloseButton.Font = Enum.Font.SourceSansBold
CloseButton.Text = "X"
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.TextSize = 20
CloseButton.Parent = TitleBar

local ToggleButton = Instance.new("TextButton")
ToggleButton.Name = "ToggleButton"
ToggleButton.Size = UDim2.new(0, 60, 0, 60)
ToggleButton.Position = UDim2.new(0, 20, 0.5, -30)
ToggleButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
ToggleButton.BorderColor3 = Color3.fromRGB(255, 0, 0)
ToggleButton.BorderSizePixel = 2
ToggleButton.Font = Enum.Font.SourceSansBold
ToggleButton.TextColor3 = Color3.fromRGB(255, 0, 0)
ToggleButton.Text = "Ω"
ToggleButton.TextSize = 40
ToggleButton.Parent = ScreenGui

local UICornerToggle = UICorner:Clone()
UICornerToggle.Parent = ToggleButton

-- // --- Boutons et textes des fonctionnalités ---
local EspToggleButton = Instance.new("TextButton", MainFrame)
EspToggleButton.Name = "EspToggleButton"
EspToggleButton.Size = UDim2.new(1, -20, 0, 30)
EspToggleButton.Position = UDim2.new(0, 10, 0, 40)
EspToggleButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
EspToggleButton.Font = Enum.Font.SourceSansBold
EspToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
EspToggleButton.Text = "ESP VIP [OFF]"
EspToggleButton.TextSize = 16
local UICornerEsp = UICorner:Clone()
UICornerEsp.Parent = EspToggleButton

local FarmToggleButton = Instance.new("TextButton", MainFrame)
FarmToggleButton.Name = "FarmToggleButton"
FarmToggleButton.Size = UDim2.new(1, -20, 0, 30)
FarmToggleButton.Position = UDim2.new(0, 10, 0, 80)
FarmToggleButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
FarmToggleButton.Font = Enum.Font.SourceSansBold
FarmToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
FarmToggleButton.Text = "Auto Farm Concierge [OFF]"
FarmToggleButton.TextSize = 16
local UICornerFarm = UICorner:Clone()
UICornerFarm.Parent = FarmToggleButton
local FarmExplanation = Instance.new("TextLabel", MainFrame)
FarmExplanation.Name = "FarmExplanation"
FarmExplanation.Size = UDim2.new(1, -20, 0, 80)
FarmExplanation.Position = UDim2.new(0, 10, 0, 115)
FarmExplanation.BackgroundTransparency = 1
FarmExplanation.Font = Enum.Font.SourceSans
FarmExplanation.TextColor3 = Color3.fromRGB(200, 200, 200)
FarmExplanation.Text = "1. Prenez le métier 'Concierge'.\n2. Équipez le balai.\n3. Activez le bouton.\nLe bot nettoie tout seul. Vous gagnez de l'argent toutes les 120 secondes."
FarmExplanation.TextSize = 14
FarmExplanation.TextWrapped = true
FarmExplanation.TextXAlignment = Enum.TextXAlignment.Left

local SpeedToggleButton = Instance.new("TextButton", MainFrame)
SpeedToggleButton.Name = "SpeedToggleButton"
SpeedToggleButton.Size = UDim2.new(1, -20, 0, 30)
SpeedToggleButton.Position = UDim2.new(0, 10, 0, 205)
SpeedToggleButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
SpeedToggleButton.Font = Enum.Font.SourceSansBold
SpeedToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
SpeedToggleButton.Text = "Augmenter la vitesse [OFF]"
SpeedToggleButton.TextSize = 16
local UICornerSpeed = UICorner:Clone()
UICornerSpeed.Parent = SpeedToggleButton

-- // =================================================================================
-- // SECTION 2: LOGIQUE DES SCRIPTS
-- // (Code de la logique inchangé)
-- // =================================================================================

local Players, RunService, UserInputService = game:GetService("Players"), game:GetService("RunService"), game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
CloseButton.MouseButton1Click:Connect(function() ScreenGui:Destroy() end)
ToggleButton.MouseButton1Click:Connect(function() MainFrame.Visible = not MainFrame.Visible end)
local dragging, dragStart, startPos = false, nil, nil
MainFrame.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then dragging, dragStart, startPos = true, input.Position, MainFrame.Position end end)
UserInputService.InputEnded:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then dragging = false end end)
MainFrame.InputChanged:Connect(function(input) if (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) and dragging then local delta = input.Position - dragStart; MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y) end end)
local ESP_ENABLED = false; local ESPContainer = Instance.new("Folder", ScreenGui); ESPContainer.Name = "ESP_Container"; local BADGE_NAME = "Staff"; EspToggleButton.MouseButton1Click:Connect(function() ESP_ENABLED = not ESP_ENABLED; EspToggleButton.Text = "ESP VIP [" .. (ESP_ENABLED and "ON" or "OFF") .. "]"; EspToggleButton.BackgroundColor3 = ESP_ENABLED and Color3.fromRGB(0, 180, 0) or Color3.fromRGB(255, 0, 0); if not ESP_ENABLED then ESPContainer:ClearAllChildren() end end); local function CreateOrUpdateESP(player) if not player or not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then return end; local espName = "ESP_" .. player.Name; local esp = ESPContainer:FindFirstChild(espName); if not esp then esp = Instance.new("BillboardGui", ESPContainer); esp.Name = espName; esp.AlwaysOnTop = true; esp.Size = UDim2.new(0, 200, 0, 50); esp.Adornee = player.Character.HumanoidRootPart; local textLabel = Instance.new("TextLabel", esp); textLabel.Name = "NameLabel"; textLabel.BackgroundTransparency = 1; textLabel.Size = UDim2.new(1, 0, 1, 0); textLabel.Font = Enum.Font.SourceSansBold; textLabel.FontSize = Enum.FontSize.Size18; textLabel.TextColor3 = Color3.fromRGB(255, 0, 0); textLabel.Text = player.Name .. " [VIP OU PREMIUIM]"; textLabel.TextStrokeTransparency = 0 end; esp.Enabled = (player.Character.Humanoid.Health > 0) end; RunService.RenderStepped:Connect(function() if not ESP_ENABLED then return end; local staffUsernames = {}; local playerGui = LocalPlayer:FindFirstChild("PlayerGui"); if not playerGui then return end; local bannerGui = playerGui:FindFirstChild("BannersGui"); if not bannerGui then return end; for _, banner in pairs(bannerGui:GetChildren()) do if banner:FindFirstChild(BADGE_NAME, true) then local username = banner.Name:gsub("_Banner", ""); if not table.find(staffUsernames, username) then table.insert(staffUsernames, username) end end end; for _, esp in pairs(ESPContainer:GetChildren()) do local playerName = esp.Name:gsub("ESP_", ""); if not table.find(staffUsernames, playerName) then esp:Destroy() end end; for _, username in pairs(staffUsernames) do local player = Players:FindFirstChild(username); if player and player ~= LocalPlayer then CreateOrUpdateESP(player) end end end)
local FARM_ENABLED = false; local farmThread = nil; FarmToggleButton.MouseButton1Click:Connect(function() FARM_ENABLED = not FARM_ENABLED; FarmToggleButton.Text = "Auto Farm Concierge [" .. (FARM_ENABLED and "ON" or "OFF") .. "]"; FarmToggleButton.BackgroundColor3 = FARM_ENABLED and Color3.fromRGB(0, 180, 0) or Color3.fromRGB(255, 0, 0); if FARM_ENABLED and not farmThread then print("Omega Auto Farm: ACTIVÉ."); farmThread = task.spawn(function() while FARM_ENABLED do local TachesFolder = workspace:FindFirstChild("Taches"); if TachesFolder then for _, obj in ipairs(TachesFolder:GetDescendants()) do if obj:IsA("ProximityPrompt") and obj.Enabled then fireproximityprompt(obj) end end end; task.wait(2) end; print("Omega Auto Farm: DÉSACTIVÉ."); farmThread = nil end) end end)
local SPEED_ENABLED = false; local originalSpeed = 16; if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then originalSpeed = LocalPlayer.Character.Humanoid.WalkSpeed end; LocalPlayer.CharacterAdded:Connect(function(character) originalSpeed = character:WaitForChild("Humanoid").WalkSpeed; task.wait(0.1); if SPEED_ENABLED and character:FindFirstChild("Humanoid") then character.Humanoid.WalkSpeed = 34 end end); SpeedToggleButton.MouseButton1Click:Connect(function() SPEED_ENABLED = not SPEED_ENABLED; SpeedToggleButton.Text = "Augmenter la vitesse [" .. (SPEED_ENABLED and "ON" or "OFF") .. "]"; SpeedToggleButton.BackgroundColor3 = SPEED_ENABLED and Color3.fromRGB(0, 180, 0) or Color3.fromRGB(255, 0, 0); if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then if SPEED_ENABLED then LocalPlayer.Character.Humanoid.WalkSpeed = 34 else LocalPlayer.Character.Humanoid.WalkSpeed = originalSpeed end end end)

ScreenGui.Parent = CoreGui
print("Le Panel Ultime d'Omega v2.4 (Symphony of Destruction Edition) est chargé ! 🎶")
